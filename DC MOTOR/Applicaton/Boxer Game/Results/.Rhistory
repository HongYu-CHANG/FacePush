table(dta$punch_type)
dta$motor_data <- as.factor(dta$motor_data)
library(data.table)
data_files <- dir()[-c(53, 54)]
dta_lst <- lapply(data_files, function(x) fread(x, sep = ',', stringsAsFactors = FALSE))
dta_rows <- unlist(lapply(dta_lst, function(x) dim(x)[1]))
which(dta_rows == 979)
which(dta_rows == 1396)
data_files[c(33, 40)]
dta <- rbindlist(dta_lst)
str(dta)
dta$motor_data #<- as.factor(dta$motor_data)
dta$motor_data <- as.factor(dta$motor_data)
levels(dta$motor_data)
str(dta)
dta$punch_type <- as.factor(dta$punch_type)
levels(dta$punch_type)
levels(dta$punch_type) <- c("heavy_R", "heavy_L", "light_R", "light_L", "light_hook")
levels(dta$motor_data)
dta$motor_data <- as.factor(dta$motor_data)
levels(dta$motor_data) <- c("no_cmd", "back_neutral", "R_light", "R_heavy", "L_light",
"M_light", "R_heavy", "M_heavy")
str(dta)
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x, xlab = names(x)) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
str(dta)
par(mfrow = c(3, 3))
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x, xlab = names(x)) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
str(dta)
dta$send2motor <- as.factor(as.integer(dta$send2motor))
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x, xlab = names(x)) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x, xlab = names(x)) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
par(mfrow = c(3, 3))
lapply(dta, function(x) {
if (class(x) == "numeric") { hist(x, xlab = names(x)) }
else if (class(x) == "character") { print("no plot for char") }
else { plot(x) }
})
str(dta)
summary(dta)
data_files
split(data_files, ',')
split(data_files, '.')
split("asdjpas.dask", '.')
atrsplit(data_files, '.')
atrsplit(data_files, '.')
strsplit(data_files, '.')
strsplit(data_files, '\.')
strsplit(data_files, '[.]')
strsplit(data_files, '[.]')[1]
strsplit(data_files[1], '[.]')
unlist(strsplit(data_files[1], '[.]'))
unlist(strsplit(data_files[1], '[.]'))[1]
lapply(data_file, function(x) unlist(strsplit(x, '[.]'))[1])
lapply(data_files, function(x) unlist(strsplit(x, '[.]'))[1])
unlist(lapply(data_files, function(x) unlist(strsplit(x, '[.]'))[1]))
condition_subject <- unlist(lapply(data_files, function(x) unlist(strsplit(x, '[.]'))[1]))
dta_rows
condition_subject <- rep(condition_subject, dta_rows)
condition_subject
strsplit(condition_subject, '_')
rbindlist(strsplit(condition_subject, '_'))
as.data.frame(strsplit(condition_subject, '_'))
condition_subject <- unlist(lapply(data_files, function(x) unlist(strsplit(x, '[.]'))[1]))
as.data.frame(strsplit(condition_subject, '_'))
condition_subject <- unlist(lapply(data_files, function(x) unlist(strsplit(x, '[.]'))[1]))
condition_subject
vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))
rbindlist(vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1)))
cbindlist(vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1)))
# read data
library(data.table)
rbindlist(vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1)))
vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))
vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))[[1]]
class(vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))[[1]])
vapply(condition_subject, function(x) strsplit(x, '_'), character)
vapply(condition_subject, function(x) strsplit(x, '_'), character(1))
vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))
as.matrix(vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1)))
vapply(condition_subject, function(x) strsplit(x, '_'), data.frame(1))
vapply(condition_subject, function(x) strsplit(x, '_'), as.data.frame(1))
rbindlist(vapply(condition_subject, function(x) strsplit(x, '_'), as.data.frame(1)))
vapply(condition_subject, function(x) strsplit(x, '_'), as.data.frame(1))
cs_lst <- vapply(condition_subject, function(x) strsplit(x, '_'), as.data.frame(1))
class(cs_lst)
class(cs_lst[[1]])
lapply(cs_lst, as.data.frame)
cs_lst <- unlist(lapply(condition_subject, function(x) strsplit(x, '_')))
cslist
cs_lst
matrix(cs_lst, c(52, 2))
matrix(cs_lst, c(2, 52))
t(matrix(cs_lst, c(2, 52)))
cs_lsy <- as.data.frame(t(matrix(cs_lst, c(2, 52))))
cs_lst <- as.data.frame(t(matrix(cs_lst, c(2, 52))))
cs_lst
dta$Condition <- rep(cs_lst$V1, dta_rows)
dta$Subject <- rep(cs_lst$V2, dta_rows)
#
str(dta)
library(ggplot2)
dta_rows
max(dta_rows)
ggplot(dta, aes(x = 1:max(dta_rows), y = HMD_rot.x, group = Sunject)) +
geom_line()
ggplot(dta, aes(x = 1:max(dta_rows), y = HMD_rot.x, group = Subject)) +
geom_line()
seq(1:c(2, 35))
seq_no <- NULL
seq_no <- NULL
for (i in 1:52) {
seq_no <- c(seq_no, 1:dta_rows[i])
}
dta$seq_no <- seq_no
ggplot(dta, aes(x = seq_no, y = HMD_rot.x, group = Subject)) +
geom_line()
# adjust rotation x, y, and z of HMD
dta$new_HMD_rot_x <-
vapplt(dta$HMD_rot.x, function(x) ifelse(x > 180, x - 360, x), numeric(1))
# adjust rotation x, y, and z of HMD
dta$new_HMD_rot_x <-
vapply(dta$HMD_rot.x, function(x) ifelse(x > 180, x - 360, x), numeric(1))
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x, group = Subject)) +
geom_line()
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x, color = Subject)) +
geom_line()
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x, color = Subject)) +
geom_line(alpha = 0.2)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x, color = Subject)) +
geom_line(alpha = 0.5)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x, color = Condition)) +
geom_line(alpha = 0.5)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_grid(Subject ~ Condition)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap( Subject)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(. ~ Subject)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(Subject ~ .)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(Subject)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(Subject, nrow = 4, ncol = 3)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(~ Subject, nrow = 4, ncol = 3)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_wrap(~ Subject, nrow = 4, ncol = 4)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject, nrow = 4, ncol = 4)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject)
dta$new_HMD_rot_z <-vapply(dta$HMD_rot.z, function(x) ifelse(x > 180, x - 360, x), numeric(1))
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_z)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject)
head(dta)
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_z)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject)
facet_grid(Condition ~ Subject)
dta$new_HMD_rot_y <-vapply(dta$HMD_rot.y, function(x) ifelse(x > 180, x - 360, x), numeric(1))
dta$new_HMD_rot_y <-vapply(dta$HMD_rot.y, function(x) ifelse(x > 180, x - 360, x), numeric(1))
ggplot(dta, aes(x = seq_no, y = new_HMD_rot_y)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject)
str(dta)
dta$send2motor
#
dta_sti <- subset(dta$send2motor == 1)
#
dta_sti <- subset(dta, dta$send2motor == 1)
ggplot(dta_sti, aes(x = seq_no, y = new_HMD_rot_x)) +
geom_line(alpha = 0.5) +
facet_grid(Condition ~ Subject)
#
table(dta$Subject)
#
table(dta_sti$Subject)
# analyse subjective data
dir()
dir()
# analyse subjective data
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating
# analyse subjective data
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating
dta_rating <- dta_rating[, -1]
dta_rating
library(reshape2)
dta_rating
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
dta_realism
dta_enjoyment
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Emjoyment", direction = "long")
dta_enjoyment_l
dta_push_long$time <- as.factor(dta_push_long$time)
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_push_long$time) <- c("A", "B", "C", "D")
levels(dta_enjoyment_l$time) <- c("A", "B", "C", "D")
names(dta_enjoyment_l)
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
dta_enjoyment_l
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("A", "B", "C", "D")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
dta_enjoyment_l
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("A", "B", "C", "D")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
dta_realism_l
#
librarby(dplyr)
#
library(dplyr)
dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(dta_enjoyment), std = sd(dta_enjoyment))
dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), std = sd(Enjoyment))
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), std = sd(Enjoyment))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, color = Condition)) +
geom_bar(stat = "identity")
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity")
#
dim(dta_enjoyment_l)
# not remove brian
dim(dta_enjoyment_l)
# not remove brian
n <- dim(dta_enjoyment_l)[1]
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2)
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2)
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
n <- dim(dta_enjoyment_l)[1]
library(dplyr)
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2)
#
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(labels = 1:7)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
# output of long format
dta_enjoyment_l
dta_realism_l
# output of long format
dta_enjoyment_l
dta_enjoyment_plot
dta_realism_plot
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
scale_color_manual(values = c("gray20", "gray40", "gray60", "gray80")) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_color_manual(values = c("gray20", "gray40", "gray60", "gray80")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_color_discrete(values = c("gray20", "gray40", "gray60", "gray80")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray20", "gray40", "gray60", "gray80")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray80", "gray60", "gray40", "gray20")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray80", "gray60", "gray40", "gray20")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray70", "gray60", "gray40", "gray20")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray70", "gray60", "gray40", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray70", "gray50", "gray30", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray60", "gray50", "gray30", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray70", "gray50", "gray30", "gray20")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray80", "gray50", "gray30", "gray20")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray80", "gray60", "gray30", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray80", "gray60", "gray30", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("forestgreen", "gray60", "gray30", "gray10")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"))
