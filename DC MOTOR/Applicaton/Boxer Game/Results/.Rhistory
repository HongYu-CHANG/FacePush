str(dta)
dta$send2motor <- as.factor(as.integer(dta$send2motor))
dta$punch_type <- as.factor(dta$punch_type)
levels(dta$punch_type) <- c("heavy_R", "heavy_L", "light_R", "light_L", "light_hook")
dta$motor_data <- as.factor(dta$motor_data)
levels(dta$motor_data) <- c("no_cmd", "back_neutral", "R_light", "R_heavy", "L_light",
"M_light", "R_heavy", "M_heavy")
str(dta)
# analyse subjective data
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating <- dta_rating[, -1]
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
#
library(reshape2)
#
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
#
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
# output of long format
dta_enjoyment_l
dta_realism_l
# not remove brian
n <- dim(dta_enjoyment_l)[1]
library(dplyr)
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
# 1. Univariate approach using aov()
m0_enjoy <- aov(Enjoyment ~ Condition + Error(Subject/Condition), data = dta_enjoyment_l)
summary(m0_enjoy)
#
m0_realism <- aov(Realism ~ Condition + Error(Subject/Condition), data = dta_realism_l)
summary(m0_realism)
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Applicaton/Boxer Game/Results/")
library(data.table)
data_files <- dir()[-c(53, 54)]
dta_lst <- lapply(data_files, function(x) fread(x, sep = ',', stringsAsFactors = FALSE))
#
dta_rows <- unlist(lapply(dta_lst, function(x) dim(x)[1]))
which(dta_rows == 979)
which(dta_rows == 1396)
data_files[c(33, 40)]
#
dta <- rbindlist(dta_lst)
str(dta)
dta$send2motor <- as.factor(as.integer(dta$send2motor))
library(data.table)
data_files <- dir()[-c(53, 54)]
dta_lst <- lapply(data_files, function(x) fread(x, sep = ',', stringsAsFactors = FALSE))
#
dta_rows <- unlist(lapply(dta_lst, function(x) dim(x)[1]))
which(dta_rows == 979)
which(dta_rows == 1396)
data_files[c(33, 40)]
#
dta <- rbindlist(dta_lst)
str(dta)
dta$send2motor <- as.factor(as.integer(dta$send2motor))
dta$send2motor
#
dta <- rbindlist(dta_lst)
dta$send2motor
which(dta$send2motor == TRUE)
interval <- NULL
for (i in 1:length(dta$send2motor)) {
if ((i % 2 )== 1) {
interval <- c(interval, dta$send2motor[i + 1] - dta$send2motor[i])
}
}
length(dta$send2motor)
length(dta$send2motor[seq(1, 58969, step = 2)])
length(dta$send2motor[seq(1, 58969, by = 2)])
length(dta$send2motor[seq(2, 58968, by = 2)])
length(dta$send2motor[seq(1, 58968, by = 2)])
length(dta$send2motor[seq(2, 58968, by = 2)])
length(dta$send2motor[seq(1, 58968, by = 2)]) - length(dta$send2motor[seq(2, 58968, by = 2)])
dta$send2motor[seq(1, 58968, by = 2)] - dta$send2motor[seq(2, 58968, by = 2)]
dta$send2motor[seq(1, 58968, by = 2)]
which(dta$send2motor == TRUE)
idx <- which(dta$send2motor == TRUE)
length(idx)
idx[seq(1, length(idx), by = 2)]
length(idx)
idx[seq(1, length(idx) - 1, by = 2)]
summary(dta)
idx[seq(2, length(idx), by = 2)]
idx[seq(1, length(idx) - 1, by = 2)] - idx[seq(2, length(idx), by = 2)]
idx[seq(3, length(idx) - 1, by = 2)] -  idx[seq(1, length(idx) - 1, by = 2)]
idx_shift_0 <- c(0, idx)
idx_shift_1 <- c(idx, 1)
idx_shift_0 - idx_shift_1
(idx[seq(3, length(idx) - 1, by = 2)] -  idx[seq(1, length(idx) - 1, by = 2)])[-1]
interval <- (idx[seq(3, length(idx) - 1, by = 2)] -  idx[seq(1, length(idx) - 1, by = 2)])
interval[-739]
interval[-740]
mean(interval[-740])
mean(interval[-740]) * 0.5
60 / 14
# aov nooooo! use Anova {car}
library(car)
install.packages("car")
# aov nooooo! use Anova {car}
library(car)
library(car)
phase <- factor(rep(c("pretest", "posttest", "followup"), c(5, 5, 5)),
levels=c("pretest", "posttest", "followup"))
hour <- ordered(rep(1:5, 3))
idata <- data.frame(phase, hour)
idata
cbind(pre.1, pre.2, pre.3, pre.4, pre.5,
post.1, post.2, post.3, post.4, post.5,
fup.1, fup.2, fup.3, fup.4, fup.5)
library(car)
h2 <- structure(list(A1neg = c(-8.427556992, 1.20452559, -14.331842422,
-10.428559303, 1.750265002, 9.388166428, 0.790130436, -1.592002392,
0.539065838, -3.758603573, 8.391399384),
B1neg = c(-12.188085556,
-1.964554906, -12.247328758, -7.326891422, -0.961694896, -1.048453212,
-4.225459576, 0.173920691, 1.876976371, -9.11947155, -1.706287026),
C1neg = c(1.750265002, 0.539065838, 1.20452559, 8.391399384, -3.758603573,
-7.326891422, 0.790130436, -9.11947155, -1.592002392, -12.188085556,
-10.428559303),
A1pos = c(-0.660317183, 3.498036146, 22.003242493, 19.905063629,
-3.124288321, 11.968006134, 5.838645935, 5.140467644, 5.154311657,
2.298083067, 1.164232969),
B1pos = c(-12.805168152, -1.550003886,
45.990013123, 15.915545464, -1.67797184, 7.565258026, 10.635170937,
12.769438744, 11.738276482, 4.544145107, 0.230011433),
C1pos= c(-1.550003886, 1.164232969, 11.738276482, 5.838645935, -12.805168152,
-0.660317183, 22.003242493, 19.905063629, 0.230011433, 7.565258026,
5.154311657)),
.Names = c("A1neg",
"B1neg",
"C1neg",
"A1pos",
"B1pos",
"C1pos"),
class = "data.frame", row.names = c("1",
"11", "21", "31", "41", "51", "61", "71", "81", "91", "101"))
h2
condition <- ordered(rep(c("A", "B", "C"), c(2)),
levels=c("A", "B", "C"))
reg <- factor(rep(c("neg", "pos"), c(3,3)),
levels=c("neg", "pos"))
idata<-data.frame(condition, reg)
idata
cbind(A1neg,B1neg,C1neg, A1pos,B1pos,C1pos) ~ 1
mod.ok<-lm(cbind(A1neg,B1neg,C1neg, A1pos,B1pos,C1pos) ~ 1, data=h2)
mod.ok
(av.ok<-Anova(mod.ok, idata=idata, idesign=~condition*reg))
summary(av.ok)
install.packages("ez")
library(ez)
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating <- dta_rating[, -1]
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
#
library(reshape2)
#
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
#
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
# output of long format
dta_enjoyment_l
dta_realism_l
# not remove brian
n <- dim(dta_enjoyment_l)[1]
library(dplyr)
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ls
dta_enjoyment
dta_realism
m0_realism <- lm(as.matrix(dta[, 2:5]) ~, data = dta_realism)
m0_realism <- lm(as.matrix(dta[, 2:5]) ~ ., data = dta_realism)
dta_realism
m0_realism <- lm(as.matrix(dta[, 2:5]) ~ 1, data = dta_realism)
m0_realism <- lm(as.matrix(dta_realism[, 2:5]) ~ 1, data = dta_realism)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
m0_out <- Anova(m0_realism, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
dta_enjoyment_l
dta_realism
dta_realism <- subset(dta_realism, X__.1 != "BRYAN")
dta_realism
# analyse subjective data
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating <- dta_rating[, -1]
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
dta_realism
dta_realism <- subset(dta_realism, X__.1 != "BRYAN")
m0_realism
dta_realism
# 1. use lm on all the repeated-measures variables together
m0_realism <- lm(as.matrix(dta_realism[, 2:5]) ~ 1, data = dta_realism)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
m0_out <- Anova(m0_realism, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
# 3. contrasts with partitioned error
c1 <- t.test(A, B, alternative = "two.sided", mu = 0,
paired = TRUE, data = dta_realism)
dta_realism
# 3. contrasts with partitioned error
c1 <- t.test(A.realism, B.realism, alternative = "two.sided", mu = 0,
paired = TRUE, data = dta_realism)
# 3. contrasts with partitioned error
c1 <- t.test(dta_realism$A.realism, dta_realism$B.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c1 <- t.test(dta_realism$A.realism, dta_realism$B.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_realism$A.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_realism$A.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_realism$B.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_realism$B.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_realism$C.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c2
c3
c4
c5
c6
summary(m0_out, multivariate = FALSE)
# output of long format
dta_enjoyment_l
subset(dta_enjoyment_l, Subject != BRYAN)
# output of long format
# remove byran
dta_enjoyment_l <- subset(dta_enjoyment_l, Subject != "BRYAN")
dta_enjoyment_l
dta_realism_l <- subset(dta_enjoyment_l, Subject != "BRYAN")
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating <- dta_rating[, -1]
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
#
library(reshape2)
#
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
#
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
# output of long format
# remove byran
dta_enjoyment_l <- subset(dta_enjoyment_l, Subject != "BRYAN")
dta_realism_l <- subset(dta_realism_l, Subject != "BRYAN")
# not remove brian
n <- dim(dta_enjoyment_l)[1]
library(dplyr)
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
subset(dta_enjoyment_l, Subject != "BRYAN")
png("enjoyment-with-one-subject-rm.png", width = 19, height = 16, units = 'cm', res = 300)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("realism-with-one-subject-rm.png", width = 19, height = 16, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
dta_enjoyment
dta_enjoyment <- subset(dta_enjoyment, X__.1 != "BRYAN")
# 1. use lm on all the repeated-measures variables together
m0_enjoyment <- lm(as.matrix(dta_enjoyment[, 2:5]) ~ 1, data = dta_enjoyment)
m0_enjoyment
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_enjoyment, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
dta_realism
dta_realism <- subset(dta_realism, X__.1 != "BRYAN")
# 1. use lm on all the repeated-measures variables together
m0_realism <- lm(as.matrix(dta_realism[, 2:5]) ~ 1, data = dta_realism)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_realism, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
# 3. contrasts with partitioned error
c1 <- t.test(dta_realism$A.realism, dta_realism$B.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_realism$A.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_realism$A.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_realism$B.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_realism$B.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_realism$C.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
dta_enjoyment_plot
dta_realism_plot
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n), std = sd(Enjoyment))
dta_enjoyment_plot
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n), std = sd(Realism))
dta_realism_plot
#--------------------enjoyment--------------------
dta_enjoyment
m0_enjoyment <- lm(as.matrix(dta_enjoyment[, 2:5]) ~ 1, data = dta_enjoyment)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_enjoyment, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
c1 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$B.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$C.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_enjoyment$B.enjoyment, dta_enjoyment$C.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_enjoyment$B.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_enjoyment$C.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c2
c3
c4
c5
c6
#--------------------realism--------------------
# remove bryan
dta_realism
dta_realism <- subset(dta_realism, X__.1 != "BRYAN")
# 1. use lm on all the repeated-measures variables together
m0_realism <- lm(as.matrix(dta_realism[, 2:5]) ~ 1, data = dta_realism)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_realism, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
c1 <- t.test(dta_realism$A.realism, dta_realism$B.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_realism$A.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_realism$A.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_realism$B.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_realism$B.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_realism$C.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c2
c3
c4
c5
c6
#--------------------enjoyment--------------------
dta_enjoyment
dta_enjoyment <- subset(dta_enjoyment, X__.1 != "BRYAN")
# 1. use lm on all the repeated-measures variables together
m0_enjoyment <- lm(as.matrix(dta_enjoyment[, 2:5]) ~ 1, data = dta_enjoyment)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_enjoyment, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
# 3. contrasts with partitioned error
c1 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$B.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$C.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_enjoyment$A.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_enjoyment$B.enjoyment, dta_enjoyment$C.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_enjoyment$B.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_enjoyment$C.enjoyment, dta_enjoyment$D.enjoyment, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c2
c3
c4
c5
c6
#--------------------realism--------------------
# remove bryan
dta_realism
dta_realism <- subset(dta_realism, X__.1 != "BRYAN")
# 1. use lm on all the repeated-measures variables together
m0_realism <- lm(as.matrix(dta_realism[, 2:5]) ~ 1, data = dta_realism)
# 2. Construct the repeated measures variable
trials = factor(c("A", "B", "C", "D"), ordered = FALSE)
trials
# Then the ‘idata’ parameter is for the repeated-measures part of the data,
# the ‘idesign’ is where you specify the repeated part of the design
m0_out <- Anova(m0_realism, idata = data.frame(trials),
idesign = ~ trials, type = "III")
summary(m0_out, multivariate = FALSE)
# 3. contrasts with partitioned error
c1 <- t.test(dta_realism$A.realism, dta_realism$B.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c2 <- t.test(dta_realism$A.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c3 <- t.test(dta_realism$A.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c4 <- t.test(dta_realism$B.realism, dta_realism$C.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c5 <- t.test(dta_realism$B.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c6 <- t.test(dta_realism$C.realism, dta_realism$D.realism, alternative = "two.sided", mu = 0,
paired = TRUE)
c1
c2
c3
c4
c5
c6
94 * 1.25
