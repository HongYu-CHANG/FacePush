dta_barplot <- dta %>% group_by(pressure) %>%
summarise(m_comfort = mean(comfortness),
std_comfort = sd(comfortness),
m_face = mean(from_face),
std_face = sd(from_face))
library(ggplot2)
comfort <- ggplot(dta_barplot, aes(x = pressure, y = m_comfort)) +
geom_bar(stat = "identity", fill = "gray80") +
geom_errorbar(aes(ymin = m_comfort - std_comfort,
ymax = m_comfort + std_comfort),
width = .2, color = "gray20") +
theme_bw() +
labs(x = "Pressure in kPa", y = "Comfortness 1 - 7") +
scale_y_continuous(limits = c(0, 7), breaks = seq(1, 7, 1)) +
scale_x_discrete(labels = c(2.575, 2.7, 3.075, 3.2, 3.575, 3.7)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
comfot
comfort
comfort <- ggplot(dta_barplot, aes(x = pressure, y = m_comfort)) +
geom_bar(stat = "identity", fill = "gray80") +
geom_errorbar(aes(ymin = m_comfort - std_comfort,
ymax = m_comfort + std_comfort),
width = .2, color = "gray20") +
theme_bw() +
labs(x = "Pressure in kPa", y = "Comfortness 1 - 7") +
scale_y_continuous(limits = c(0, 7), breaks = seq(1, 7, 1)) +
scale_x_discrete(labels = c(2.575, 2.7, 3.075, 3.2, 3.575, 3.7)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
comfort
face <- ggplot(dta_barplot, aes(x = pressure, y = m_face)) +
geom_bar(stat = "identity", fill = "gray80") +
theme_bw() +
labs(x = "Pressure in kPa", y = "% of force coming from face") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
library(gridExtra)
jpeg("a2p.jpeg", width = 24.05, height = 11, units = 'cm', res = 300)
grid.arrange(comfort, face, nrow = 1)
dev.off()
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Document/Angle 2 Force/")
dir()
dta_lst <- lapply(dir(), function(x) read.table(x, sep = ',', header = TRUE))
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Document/Angle 2 Force/")
dir()
dta_lst <- lapply(dir(), function(x) read.table(x, sep = ',', header = TRUE))
dta_push <- lapply(dta_lst, function(x) {
subset(x, x[, 3] >= mean(x[, 3]))
})
len_dta_push <- unlist(lapply(dta_push, function(x) dim(x)[1]))
library(data.table)
dta_push <- rbindlist(dta_push)
dta_push$Angle <- rep(seq(from = 10, to = 180, by = 10), len_dta_push)
dta_push
plot(1:1730, dta_push$LowerRight, type = 'l')
dim(dta_push)
library(reshape2)
dta_push_long <- reshape(dta_push,
varying = c("UpperRight", "LowerRight", "UpperMiddle",
"LowerLeft", "UpperLeft"),
v.names = "Pressure", direction = "long")
dta_push_long$time <- as.factor(dta_push_long$time)
levels(dta_push_long$time) <- c("UpperRight", "LowerRight", "UpperMiddle",
"LowerLeft", "UpperLeft")
names(dta_push_long) <- c("Angle", "Location", "Pressure", "id")
library(dplyr)
dta_barplot <- dta_push_long %>% group_by(Location) %>%
summarise(m_pressure = mean(Pressure),
std_pressure = sd(Pressure))
ggplot(dta_barplot, aes(x = reorder(Location, m_pressure, max),
y = m_pressure, fill = Location)) +
geom_bar(stat = "identity") +
geom_errorbar(data = dta_barplot, aes(ymin = m_pressure - std_pressure,
ymax = m_pressure + std_pressure),
width = .2) +
labs(x = "Location on Face", y = "Pressure in kPa") +
coord_flip() + theme_bw() +
scale_fill_manual(values = c( "gray25", "gray40", "gray55", "gray70", "gray85")) +
theme(legend.position = c(0.85, 0.3)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
jpeg("5-location-pressure.jpeg", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(dta_barplot, aes(x = reorder(Location, m_pressure, max),
y = m_pressure, fill = Location)) +
geom_bar(stat = "identity") +
geom_errorbar(data = dta_barplot, aes(ymin = m_pressure - std_pressure,
ymax = m_pressure + std_pressure),
width = .2) +
labs(x = "Location on Face", y = "Pressure in kPa") +
coord_flip() + theme_bw() +
scale_fill_manual(values = c( "gray25", "gray40", "gray55", "gray70", "gray85")) +
theme(legend.position = c(0.85, 0.3)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
ggplot(dta_push_long, aes(x = reorder(Location, Pressure, mean),
y = Pressure, fill = Location)) +
geom_boxplot() +
labs(x = "Location on Face", y = "Pressure in kPa") +
coord_flip() + theme_bw() +
scale_fill_manual(values = c( "gray25", "gray40", "gray55", "gray70", "gray85")) +
theme_bw() +
theme(legend.position = c(0.85, 0.3), panel.grid = element_blank())
library(dplyr)
agg_data <- subset(dta_push_long, dta_push_long$Location != "UpperMiddle")
agg_data <- subset(agg_data, agg_data$Angle != 180)
agg_data <- agg_data %>%  group_by(Angle) %>%
summarise(m = mean(Pressure))
final_m <- lm(m ~ Angle, agg_data) # the closest to our previous result
summary(final_m)
ggplot(agg_data, aes(x = Angle, y = m)) +
geom_point(shape = 17, color = "forestgreen", size = 2) +
#geom_abline(slope = coef(final_m)[2], intercept = coef(final_m)[1]) +
stat_smooth(method = "lm", se = F, col = "black", lwd = 0.5) +
labs(x = "Angle 10 - 170 degrees", y = "Pressure in kPa") +
scale_x_continuous(limits = c(0, 180), breaks = seq(0, 170, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 4.5), breaks = seq(0, 4.5, 0.5), expand = c(0, 0)) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
jpeg("angle2pressure.jpeg", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(agg_data, aes(x = Angle, y = m)) +
geom_point(shape = 17, color = "forestgreen", size = 2) +
#geom_abline(slope = coef(final_m)[2], intercept = coef(final_m)[1]) +
stat_smooth(method = "lm", se = F, col = "black", lwd = 0.5) +
labs(x = "Angle 10 - 170 degrees", y = "Pressure in kPa") +
scale_x_continuous(limits = c(0, 180), breaks = seq(0, 170, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 4.5), breaks = seq(0, 4.5, 0.5), expand = c(0, 0)) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Applicaton/Boxer Game/Results/")
png("angle2pressure.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(agg_data, aes(x = Angle, y = m)) +
geom_point(shape = 17, color = "forestgreen", size = 2) +
#geom_abline(slope = coef(final_m)[2], intercept = coef(final_m)[1]) +
stat_smooth(method = "lm", se = F, col = "black", lwd = 0.5) +
labs(x = "Angle 10 - 170 degrees", y = "Pressure in kPa") +
scale_x_continuous(limits = c(0, 180), breaks = seq(0, 170, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 4.5), breaks = seq(0, 4.5, 0.5), expand = c(0, 0)) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Document/Other/")
dta <- read.table("./comfortness-pilot.csv", sep = ',', header = TRUE)
library(dplyr)
dta$pressure <- as.factor(dta$pressure)
table(dta$pressure)
dta_barplot <- dta %>% group_by(pressure) %>%
summarise(m_comfort = mean(comfortness),
std_comfort = sd(comfortness),
m_face = mean(from_face),
std_face = sd(from_face))
# note, change x labels (6 forces), y label?
library(ggplot2)
library(ggplot2)
comfort <- ggplot(dta_barplot, aes(x = pressure, y = m_comfort)) +
geom_bar(stat = "identity", fill = "gray80") +
geom_errorbar(aes(ymin = m_comfort - std_comfort,
ymax = m_comfort + std_comfort),
width = .2, color = "gray20") +
theme_bw() +
labs(x = "Pressure in kPa", y = "Comfortness 1 - 7") +
scale_y_continuous(limits = c(0, 7), breaks = seq(1, 7, 1)) +
scale_x_discrete(labels = c(2.575, 2.7, 3.075, 3.2, 3.575, 3.7)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
face <- ggplot(dta_barplot, aes(x = pressure, y = m_face)) +
geom_bar(stat = "identity", fill = "gray80") +
theme_bw() +
labs(x = "Pressure in kPa", y = "% of force coming from face") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
library(gridExtra)
png("comfort.png", width = 24.05, height = 11, units = 'cm', res = 300)
grid.arrange(comfort, face, nrow = 1)
dev.off()
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Document/Angle 2 Force/")
dir()
dta_lst <- lapply(dir(), function(x) read.table(x, sep = ',', header = TRUE))
# extracht data while pushing, for finding pressure
dta_push <- lapply(dta_lst, function(x) {
subset(x, x[, 3] >= mean(x[, 3]))
})
len_dta_push <- unlist(lapply(dta_push, function(x) dim(x)[1]))
dta_push <- rbindlist(dta_push)
dta_push$Angle <- rep(seq(from = 10, to = 180, by = 10), len_dta_push)
dta_push
plot(1:1730, dta_push$LowerRight, type = 'l')
dim(dta_push)
dta_push_long <- reshape(dta_push,
varying = c("UpperRight", "LowerRight", "UpperMiddle",
"LowerLeft", "UpperLeft"),
v.names = "Pressure", direction = "long")
dta_push_long$time <- as.factor(dta_push_long$time)
levels(dta_push_long$time) <- c("UpperRight", "LowerRight", "UpperMiddle",
"LowerLeft", "UpperLeft")
names(dta_push_long) <- c("Angle", "Location", "Pressure", "id")
dta_barplot <- dta_push_long %>% group_by(Location) %>%
summarise(m_pressure = mean(Pressure),
std_pressure = sd(Pressure))
library(dplyr)
agg_data <- subset(dta_push_long, dta_push_long$Location != "UpperMiddle")
agg_data <- subset(agg_data, agg_data$Angle != 180)
agg_data <- agg_data %>%  group_by(Angle) %>%
summarise(m = mean(Pressure))
final_m <- lm(m ~ Angle, agg_data) # the closest to our previous result
summary(final_m)
png("angle2pressure.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(agg_data, aes(x = Angle, y = m)) +
geom_point(shape = 17, color = "forestgreen", size = 2) +
#geom_abline(slope = coef(final_m)[2], intercept = coef(final_m)[1]) +
stat_smooth(method = "lm", se = F, col = "black", lwd = 0.5) +
labs(x = "Angle 10 - 170 degrees", y = "Pressure in kPa") +
scale_x_continuous(limits = c(0, 180), breaks = seq(0, 170, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 4.5), breaks = seq(0, 4.5, 0.5), expand = c(0, 0)) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
setwd("~/Documents/_NILab_CrazyMotor/FacePush/DC MOTOR/Applicaton/Boxer Game/Results/")
library(data.table)
data_files <- dir()[-c(53, 54)]
dta_lst <- lapply(data_files, function(x) fread(x, sep = ',', stringsAsFactors = FALSE))
dta_rows <- unlist(lapply(dta_lst, function(x) dim(x)[1]))
which(dta_rows == 979)
which(dta_rows == 1396)
data_files[c(33, 40)]
dta <- rbindlist(dta_lst)
str(dta)
dta$send2motor <- as.factor(as.integer(dta$send2motor))
dta$punch_type <- as.factor(dta$punch_type)
levels(dta$punch_type) <- c("heavy_R", "heavy_L", "light_R", "light_L", "light_hook")
dta$motor_data <- as.factor(dta$motor_data)
levels(dta$motor_data) <- c("no_cmd", "back_neutral", "R_light", "R_heavy", "L_light",
"M_light", "R_heavy", "M_heavy")
str(dta)
# check with hist
#par(mfrow = c(3, 3))
#lapply(dta, function(x) {
#  if (class(x) == "numeric") { hist(x, xlab = names(x)) }
#  else if (class(x) == "character") { print("no plot for char") }
dta_rating <- read.table("study2_rating.csv", header = TRUE, sep = ',')
dta_rating <- dta_rating[, -1]
dta_enjoyment <- dta_rating[, c(1, 3, 5, 7, 9)]
dta_realism <- dta_rating[, c(1, 2, 4, 6, 8)]
#
#
library(reshape2)
dta_enjoyment_l <- reshape(dta_enjoyment,
varying = c( "A.enjoyment", "B.enjoyment", "C.enjoyment", "D.enjoyment"),
v.names = "Enjoyment", direction = "long")
dta_enjoyment_l$time <- as.factor(dta_enjoyment_l$time)
levels(dta_enjoyment_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_enjoyment_l) <- c("Subject", "Condition", "Enjoyment", "id")
#
dta_realism_l <- reshape(dta_realism,
varying = c( "A.realism", "B.realism", "C.realism", "D.realism"),
v.names = "Realism", direction = "long")
dta_realism_l$time <- as.factor(dta_realism_l$time)
levels(dta_realism_l$time) <- c("Without FacePush", "Light Force", "Heavy Force", "Two Forces")
names(dta_realism_l) <- c("Subject", "Condition", "Realism", "id")
# output of long format
dta_enjoyment_l
dta_realism_l
# not remove brian
n <- dim(dta_enjoyment_l)[1]
library(dplyr)
dta_enjoyment_plot <- dta_enjoyment_l %>% group_by(Condition) %>%
summarise(m = mean(Enjoyment), ci = 1.96 * sd(Enjoyment) / sqrt(n))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.9, 0.9),
legend.direction = "horizontal")
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.9, 0.9))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.5, 0.8),
legend.direction = "horizontal")
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.5, 0.9),
legend.direction = "horizontal")
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.1, 0.9))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.1, 0.85))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.15, 0.88))
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
png("enjoyment.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
dta_realism_plot <- dta_realism_l %>% group_by(Condition) %>%
summarise(m = mean(Realism), ci = 1.96 * sd(Realism) / sqrt(n))
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
png("realism.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("realism.png", width = 11, height = 11, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("enjoyment.png", width = 11, height = 11, units = 'cm', res = 300)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("angle2pressure.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(agg_data, aes(x = Angle, y = m)) +
geom_point(shape = 17, color = "forestgreen", size = 2) +
#geom_abline(slope = coef(final_m)[2], intercept = coef(final_m)[1]) +
stat_smooth(method = "lm", se = F, col = "black", lwd = 0.5) +
labs(x = "Angle 10 - 170 degrees", y = "Pressure in kPa") +
scale_x_continuous(limits = c(0, 180), breaks = seq(0, 170, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 4.5), breaks = seq(0, 4.5, 0.5), expand = c(0, 0)) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
png("5-location-pressure.png", width = 24.05, height = 11, units = 'cm', res = 300)
ggplot(dta_barplot, aes(x = reorder(Location, m_pressure, max),
y = m_pressure, fill = Location)) +
geom_bar(stat = "identity") +
geom_errorbar(data = dta_barplot, aes(ymin = m_pressure - std_pressure,
ymax = m_pressure + std_pressure),
width = .2) +
labs(x = "Location on Face", y = "Pressure in kPa") +
coord_flip() + theme_bw() +
scale_fill_manual(values = c( "gray25", "gray40", "gray55", "gray70", "gray85")) +
theme(legend.position = c(0.85, 0.3)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.grid = element_blank())
dev.off()
png("realism.png", width = 13, height = 10, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("realism.png", width = 18, height = 15, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("realism.png", width = 18, height = 16, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("realism.png", width = 19, height = 16, units = 'cm', res = 300)
ggplot(dta_realism_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Realism Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
png("enjoyment.png", width = 19, height = 16, units = 'cm', res = 300)
ggplot(dta_enjoyment_plot, aes(x = Condition, y = m, fill = Condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = m - ci, ymax = m + ci), width = 0.2) +
scale_y_continuous(breaks = 1:7, limits = c(0, 7)) +
theme_bw() + labs(x = "", y = "Enjoyment Rating 1 - 7") +
scale_fill_manual(values = c("gray90", "gray70", "gray50", "gray30")) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
panel.grid = element_blank(), legend.position = c(0.12, 0.88))
dev.off()
